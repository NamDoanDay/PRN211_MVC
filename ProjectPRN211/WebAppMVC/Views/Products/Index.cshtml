@model IEnumerable<AppLibrary.Models.Product>
@inject IHttpContextAccessor contxt;
@{
    ViewData["Title"] = "Index";
}

<h1>Product</h1>

@{
    int? userRole = contxt.HttpContext.Session.GetInt32("userRole");
}
@if (userRole.HasValue && (userRole == 1))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OriginalPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SellPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SalePercent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Shop)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OriginalPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SellPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SalePercent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shop.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.StatusId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubCategory.SubCategoryId)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a>
            </td>
                
                @if(userRole.HasValue && userRole.Value==1){
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                    </td>
                }
                
        </tr>
}
    </tbody>
</table>
